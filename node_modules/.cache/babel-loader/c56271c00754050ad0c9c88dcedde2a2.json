{"ast":null,"code":"import Mybutton from '@/components/Mybutton.vue';\nexport default {\n  name: \"Bussiness\",\n  components: {\n    Mybutton\n  },\n\n  async created() {\n    this.username = this.$route.query.userId;\n    await axios.get('/api/goods/999/1/31/', {}).then(res => {\n      this.goodsGroup = res.data;\n    });\n  },\n\n  mounted() {},\n\n  data() {\n    var checkName = (rule, value, callback) => {\n      if (!this.ruleForm.description) {\n        return callback(new Error('商品名不能为空'));\n      } else {\n        callback();\n      }\n    };\n\n    var validateCount = (rule, value, callback) => {\n      let result = this.ruleForm.availCount;\n\n      if (!result) {\n        callback(new Error('请输入库存量'));\n      } else {\n        var passwordreg = /(?![^0-9]*$)/;\n\n        if (!passwordreg.test(result)) {\n          return callback(new Error('库存量必须由数字组成'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    var validatePrice = (rule, value, callback) => {\n      let result = this.ruleForm.price;\n\n      if (!result) {\n        callback(new Error('请输入商品单价'));\n      } else {\n        var passwordreg = /(?![^0-9]*$)/;\n\n        if (!passwordreg.test(result)) {\n          return callback(new Error('价格必须由数字组成'));\n        } else {\n          callback();\n        }\n      }\n    };\n\n    var checkAddr = (rule, value, callback) => {\n      if (!this.ruleForm.address) {\n        return callback(new Error('发货地不能为空'));\n      } else {\n        callback();\n      }\n    };\n\n    var validateType = (rule, value, callback) => {\n      if (!this.ruleForm.type) {\n        return callback(new Error('商品类型不能为空'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      username: '',\n      src1: '/static/sellerGoodPie(ys1).html',\n      src2: '/static/sellerOrderPie(ys1).html',\n      src3: '/static/sellerSoldCountLine(ys1).html',\n      src4: '/static/sellerSoldMoneyLine(ys1).html',\n      upVisible: false,\n      ruleForm: {\n        description: '',\n        price: '',\n        availCount: '',\n        address: '',\n        type: ''\n      },\n      rules: {\n        checkCount: [{\n          validator: validateCount,\n          trigger: 'blur'\n        }],\n        checkPrice: [{\n          validator: validatePrice,\n          trigger: 'blur'\n        }],\n        name: [{\n          validator: checkName,\n          trigger: 'blur'\n        }],\n        addr: [{\n          validator: checkAddr,\n          trigger: 'blur'\n        }],\n        checkType: [{\n          validator: validateType,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    up() {\n      this.upVisible = false;\n      this.$notify({\n        title: '上架成功',\n        message: '祝老板财源广进~',\n        type: 'success'\n      });\n    },\n\n    submitForm(formName) {\n      console.log(this.username);\n      console.log(this.ruleForm.price);\n      console.log(this.ruleForm.availCount);\n      console.log(this.ruleForm.description);\n      console.log(this.ruleForm.address);\n\n      if (this.type == '药品') {\n        this.type = 1;\n      } else if (this.type == '食品饮料') {\n        this.type = 2;\n      } else if (this.type == '文学') {\n        this.type = 3;\n      } else {\n        this.type = 4;\n      }\n\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.$axios({\n            method: 'post',\n            url: '/api/uploadgood/',\n            data: JSON.stringify({\n              seller: this.username,\n              price: this.ruleForm.price,\n              availCount: this.ruleForm.availCount,\n              soldCount: 0,\n              description: this.ruleForm.description,\n              type: this.type,\n              address: this.ruleForm.address\n            })\n          }).then(res => {\n            this.$notify({\n              title: '上架成功',\n              message: '商品已经成功上架',\n              type: 'success'\n            });\n          }).catch(err => {\n            if (err.response) {\n              this.$notify({\n                title: '上架失败',\n                message: '由于神奇的原因失败辽~',\n                type: 'error'\n              });\n            }\n          });\n        } else {\n          console.log('error');\n          return false;\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAsEA;AACA;EACAA,iBADA;EAEAC;IACAC;EADA,CAFA;;EAKA;IACA;IACA,4CACAC,IADA,CACAC;MACA;IACA,CAHA;EAKA,CAZA;;EAaAC,WAEA,CAfA;;EAgBAC;IACA;MACA;QACA;MACA,CAFA,MAEA;QACAC;MACA;IACA,CANA;;IAOA;MACA;;MACA;QACAA;MACA,CAFA,MAEA;QACA;;QACA;UACA;QACA,CAFA,MAEA;UACAA;QACA;MACA;IACA,CAZA;;IAaA;MACA;;MACA;QACAA;MACA,CAFA,MAEA;QACA;;QACA;UACA;QACA,CAFA,MAEA;UACAA;QACA;MACA;IACA,CAZA;;IAaA;MACA;QACA;MACA,CAFA,MAEA;QACAA;MACA;IACA,CANA;;IAOA;MACA;QACA;MACA,CAFA,MAEA;QACAA;MACA;IACA,CANA;;IAQA;MACAC,YADA;MAEAC,uCAFA;MAGAC,wCAHA;MAIAC,6CAJA;MAKAC,6CALA;MAMAC,gBANA;MAOAC;QACAC,eADA;QAEAC,SAFA;QAGAC,cAHA;QAIAC,WAJA;QAKAC;MALA,CAPA;MAcAC;QACAC,aACA;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAC,aACA;UAAAF;UAAAC;QAAA,CADA,CAJA;QAOAvB,OACA;UAAAsB;UAAAC;QAAA,CADA,CAPA;QAUAE,OACA;UAAAH;UAAAC;QAAA,CADA,CAVA;QAaAG,YACA;UAAAJ;UAAAC;QAAA,CADA;MAbA;IAdA;EAgCA,CAjGA;;EAkGAI;IACAC;MACA;MACA;QACAC,aADA;QAEAC,mBAFA;QAGAX;MAHA;IAKA,CARA;;IASAY;MACAC;MACAA;MACAA;MACAA;MACAA;;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA,CAFA,MAEA;QACA;MACA,CAFA,MAEA;QACA;MACA;;MACA;QACA;UACA;YACAC,cADA;YAEAC,uBAFA;YAGA5B;cACA6B,qBADA;cAEAnB,0BAFA;cAGAC,oCAHA;cAIAmB,YAJA;cAKArB,sCALA;cAMAI,eANA;cAOAD;YAPA;UAHA,GAYAf,IAZA,CAYAC;YACA;cACAyB,aADA;cAEAC,mBAFA;cAGAX;YAHA;UAKA,CAlBA,EAkBAkB,KAlBA,CAkBAC;YACA;cACA;gBACAT,aADA;gBAEAC,sBAFA;gBAGAX;cAHA;YAKA;UACA,CA1BA;QA2BA,CA5BA,MA4BA;UACAa;UACA;QACA;MACA,CAjCA;IAkCA;;EA1DA;AAlGA","names":["name","components","Mybutton","then","res","mounted","data","callback","username","src1","src2","src3","src4","upVisible","ruleForm","description","price","availCount","address","type","rules","checkCount","validator","trigger","checkPrice","addr","checkType","methods","up","title","message","submitForm","console","method","url","seller","soldCount","catch","err"],"sourceRoot":"src/views","sources":["BusinessFace.vue"],"sourcesContent":["<template>\r\n<div class=\"body\">\r\n    <!-- <Transition appear name=\"logo-fade\">\r\n            <div style=\"position:absolute;margin-left: 80%;\">\r\n                <img src=\"../assets/LOGO1.png\" width=\"250px\">\r\n            </div>\r\n    </Transition> -->\r\n    <div style=\"font-size:30px;font-weight:900;margin-top: 1%;margin-bottom: 1%;\">\r\n        Hi~,{{ username }},这是您商品的情况：\r\n    </div>\r\n \r\n\r\n    <el-dialog title=\"上架商品\" :visible.sync=\"upVisible\" width=\"30%\" center>\r\n        \r\n            <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                    <el-form-item label=\"商品名称\" prop=\"name\">\r\n                        <el-input v-model=\"ruleForm.description\" type=\"textarea\"\r\n                        :autosize=\"{ minRows: 2, maxRows: 100}\">\r\n                        </el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"商品价格￥\" prop=\"checkPrice\">\r\n                        <el-input v-model=\"ruleForm.price\" autocomplete=\"off\" clearable></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"库存量\" prop=\"checkCount\">\r\n                        <el-input  v-model=\"ruleForm.availCount\" autocomplete=\"off\" clearable></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"发货地\" prop=\"addr\">\r\n                        <el-input  v-model=\"ruleForm.address\" autocomplete=\"off\" clearable></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"商品类型\" prop=\"checkType\">\r\n                            <el-radio-group v-model=\"ruleForm.type\">\r\n                                <el-radio  label=\"药品\"></el-radio>\r\n                                <el-radio  label=\"食品饮料\"></el-radio>\r\n                                <el-radio  label=\"文学\"></el-radio>\r\n                                <el-radio  label=\"日常用品\"></el-radio>\r\n                            </el-radio-group>\r\n                            \r\n                    </el-form-item>\r\n            </el-form>\r\n\r\n        <span slot=\"footer\" class=\"dialog-footer\">    \r\n            <el-button @click=\"buyVisiable=false\">我再想想</el-button>\r\n            <el-button type=\"primary\" @click.native=\"submitForm('ruleForm')\">立即上架</el-button>\r\n        </span>\r\n    </el-dialog>\r\n\r\n    <div>\r\n        <iframe :src=\"src1\" \r\n            width=\"500\" height=\"300\" border=\"0\"  \r\n            marginwidth=\"0\" marginheight=\"0\" scrolling=\"0\" allowtransparency=\"yes\"></iframe>\r\n\r\n            <iframe :src=\"src2\" width=\"500\" height=\"300\" border=\"0\"  \r\n            marginwidth=\"0\" marginheight=\"0\" scrolling=\"0\" allowtransparency=\"yes\"></iframe>\r\n\r\n            <iframe :src=\"src3\" width=\"500\" height=\"300\" border=\"0\"  \r\n            marginwidth=\"0\" marginheight=\"0\" scrolling=\"0\" allowtransparency=\"yes\"></iframe>\r\n\r\n            <iframe :src=\"src4\" width=\"500\" height=\"300\" border=\"0\"  \r\n            marginwidth=\"0\" marginheight=\"0\" scrolling=\"0\" allowtransparency=\"yes\"></iframe>\r\n    </div>\r\n            \r\n\r\n\r\n    <Mybutton msg=\"上架商品\" @click.native=\"upVisible=true\"></Mybutton>\r\n\r\n\r\n</div>\r\n</template>\r\n    \r\n    <script>\r\n        import Mybutton from '@/components/Mybutton.vue';\r\n        export default {\r\n            name: \"Bussiness\",\r\n            components: {\r\n                Mybutton\r\n            },\r\n            async created() {\r\n                this.username = this.$route.query.userId;\r\n                await axios.get('/api/goods/999/1/31/',{\r\n                    }).then((res) => {\r\n                        this.goodsGroup = res.data;             \r\n                    });\r\n\r\n            },\r\n            mounted() {\r\n\r\n            },\r\n            data() {\r\n                var checkName = (rule, value, callback) => {\r\n                    if (!this.ruleForm.description) {\r\n                        return callback(new Error('商品名不能为空'));\r\n                    } else {\r\n                        callback();\r\n                    }\r\n                };\r\n                var validateCount = (rule, value, callback) => {\r\n                    let result = this.ruleForm.availCount;\r\n                        if (!result) {\r\n                            callback(new Error('请输入库存量'));\r\n                        } else {\r\n                            var passwordreg = /(?![^0-9]*$)/;\r\n                            if (!passwordreg.test(result)) {\r\n                                return callback(new Error('库存量必须由数字组成'));\r\n                            } else {\r\n                                callback();\r\n                            }\r\n                        }\r\n                };\r\n                var validatePrice = (rule, value, callback) => {\r\n                    let result = this.ruleForm.price;\r\n                    if (!result) {\r\n                        callback(new Error('请输入商品单价'));\r\n                    } else {\r\n                        var passwordreg = /(?![^0-9]*$)/;\r\n                            if (!passwordreg.test(result)) {\r\n                                return callback(new Error('价格必须由数字组成'));\r\n                            } else {\r\n                                callback();\r\n                            }\r\n                    }\r\n                };\r\n                var checkAddr = (rule, value, callback) => {\r\n                    if (!this.ruleForm.address) {\r\n                        return callback(new Error('发货地不能为空'));\r\n                    } else {\r\n                        callback();\r\n                    }\r\n                };\r\n                var validateType = (rule, value, callback) => {\r\n                    if (!this.ruleForm.type) {\r\n                        return callback(new Error('商品类型不能为空'));\r\n                    } else {\r\n                        callback();\r\n                    }\r\n                };\r\n\r\n                return {\r\n                    username: '',\r\n                    src1 : '/static/sellerGoodPie(ys1).html',\r\n                    src2: '/static/sellerOrderPie(ys1).html',\r\n                    src3: '/static/sellerSoldCountLine(ys1).html',\r\n                    src4: '/static/sellerSoldMoneyLine(ys1).html',\r\n                    upVisible: false,\r\n                    ruleForm : {\r\n                        description: '',\r\n                        price: '',\r\n                        availCount: '',\r\n                        address: '',\r\n                        type: ''\r\n                    },\r\n                    rules: {\r\n                        checkCount: [\r\n                            {validator:validateCount, trigger: 'blur'}\r\n                        ],\r\n                        checkPrice: [\r\n                            { validator:validatePrice, trigger: 'blur'}\r\n                        ],\r\n                        name: [\r\n                            {validator:checkName, trigger: 'blur'}\r\n                        ],\r\n                        addr: [\r\n                        {validator:checkAddr, trigger: 'blur'}\r\n                        ],\r\n                        checkType: [\r\n                            {validator:validateType, trigger: 'blur'}\r\n                        ]\r\n                    }             \r\n                }\r\n            },\r\n            methods: {\r\n                up() {\r\n                    this.upVisible = false;\r\n                    this.$notify({\r\n                        title: '上架成功',\r\n                        message: '祝老板财源广进~',\r\n                        type: 'success'\r\n                    });\r\n                },\r\n                submitForm(formName) {\r\n                    console.log(this.username);\r\n                    console.log(this.ruleForm.price);\r\n                    console.log(this.ruleForm.availCount);\r\n                    console.log(this.ruleForm.description);\r\n                    console.log(this.ruleForm.address);\r\n                    if (this.type =='药品') {\r\n                        this.type = 1; \r\n                    } else if (this.type == '食品饮料') {\r\n                        this.type = 2;\r\n                    } else if (this.type == '文学') {\r\n                        this.type = 3;\r\n                    } else {\r\n                        this.type = 4;\r\n                    }\r\n                    this.$refs[formName].validate((valid) => {\r\n                        if (valid) {\r\n                            this.$axios({\r\n                                method: 'post',\r\n                                url: '/api/uploadgood/',\r\n                                data: JSON.stringify({\r\n                                        seller: this.username,\r\n                                        price: this.ruleForm.price,\r\n                                        availCount: this.ruleForm.availCount,\r\n                                        soldCount: 0,\r\n                                        description: this.ruleForm.description,\r\n                                        type: this.type,\r\n                                        address: this.ruleForm.address\r\n                                        })\r\n                                }).then(res => {\r\n                                    this.$notify({\r\n                                        title:'上架成功',\r\n                                        message:'商品已经成功上架',\r\n                                        type:'success'\r\n                                    });\r\n                                }).catch((err) => {\r\n                                    if (err.response) {\r\n                                            this.$notify({\r\n                                                title:'上架失败',\r\n                                                message:'由于神奇的原因失败辽~',\r\n                                                type:'error'\r\n                                        });\r\n                                    }\r\n                                });\r\n                        } else {\r\n                            console.log('error');\r\n                            return false;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    </script>\r\n\r\n    \r\n<style scoped>\r\n        .logo-fade-enter-active {\r\n            transition: all 2s ease;\r\n        }\r\n        .logo-fade-enter, .logo-fade-leave-to {\r\n            transform: translateX(-1000px) rotate(720deg);\r\n            opacity: 0;\r\n        }\r\n        .body {\r\n            position : absolute;\r\n\t        width : 100%;\r\n\t        height : 100%;\r\n            background: url(\"../assets/business.png\") no-repeat;\r\n            background-size:cover;\r\n        }\r\n</style>"]},"metadata":{},"sourceType":"module"}