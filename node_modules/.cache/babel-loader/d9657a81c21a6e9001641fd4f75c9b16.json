{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport Mybutton from '@/components/Mybutton.vue';\nexport default {\n  name: \"Detail\",\n\n  async created() {\n    this.id = this.$route.query.id;\n    await axios.get(\"/api/getorder/\" + this.id + \"/all/\").then(res => {\n      this.goods = res.data;\n    });\n    this.total = 0;\n\n    for (var i = 0; i < this.goods.length; i++) {\n      this.total = this.total + Number(this.goods[i].actual_paid);\n    }\n  },\n\n  components() {\n    Mybutton;\n  },\n\n  data() {\n    return {\n      id: \"\",\n      goods: [],\n      centerDialogVisible: false,\n      content: '',\n      score: null,\n      currentId: null,\n      currentOrder: null,\n      total: 0\n    };\n  },\n\n  methods: {\n    img(good) {\n      return good.pic;\n    },\n\n    back() {\n      this.$router.push({\n        path: \"/main\",\n        query: {\n          userId: this.id\n        }\n      });\n    },\n\n    submitComment() {\n      this.centerDialogVisible = false;\n\n      if (this.content === \"\") {\n        this.$notify.error({\n          title: '评论失败',\n          message: '评论内容不能为空'\n        });\n      } else {\n        this.$axios({\n          method: 'post',\n          url: '/api/addcomment/',\n          data: JSON.stringify({\n            grade: this.score,\n            comment: this.content,\n            orderId: this.currentOrder\n          })\n        }).then(res => {});\n        this.$notify.success({\n          title: '评论成功',\n          message: '感谢您的评论~'\n        });\n      }\n    },\n\n    submitComment1(good) {\n      this.centerDialogVisible = true;\n      this.currentId = good.goodId;\n      this.currentOrder = good.id;\n    },\n\n    click_detail(good) {\n      alert('1');\n      let routerDate = this.$router.resolve({\n        path: '/detail',\n        query: {\n          id: good.goodId,\n          username: this.id\n        }\n      });\n      window.open(routerDate.href, '_blank');\n    }\n\n  },\n  filters: {\n    numFilter(value) {\n      let real = parseFloat(value).toFixed(2);\n      return real;\n    }\n\n  },\n  components: {\n    Mybutton\n  }\n};","map":{"version":3,"mappings":";AAiFA;AACA;AACA;EACAA,cADA;;EAEA;IACA;IACA;MACA;IACA,CAFA;IAGA;;IACA;MACA;IACA;EACA,CAXA;;EAYAC;IACAC;EACA,CAdA;;EAeAC;IACA;MACAC,MADA;MAEAC,SAFA;MAGAC,0BAHA;MAIAC,WAJA;MAKAC,WALA;MAMAC,eANA;MAOAC,kBAPA;MAQAC;IARA;EAUA,CA1BA;;EA2BAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;QAAAC;QAAAC;UAAAC;QAAA;MAAA;IACA,CANA;;IAOAC;MACA;;MACA;QACA;UACAC,aADA;UAEAC;QAFA;MAIA,CALA,MAKA;QACA;UACAC,cADA;UAEAC,uBAFA;UAGAnB;YACAoB,iBADA;YAEAC,qBAFA;YAGAC;UAHA;QAHA,GASAC,IATA,CASAC,QAEA,CAXA;QAaA;UACAR,aADA;UAEAC;QAFA;MAIA;IAEA,CAlCA;;IAmCAQ;MACA;MACA;MACA;IACA,CAvCA;;IAwCAC;MACAC;MACA;QACAf,eADA;QAEAC;UACAZ,eADA;UAEA2B;QAFA;MAFA;MAOAC;IACA;;EAlDA,CA3BA;EA+EAC;IACAC;MACA;MACA;IACA;;EAJA,CA/EA;EAqFAjC;IAAAC;EAAA;AArFA","names":["name","components","Mybutton","data","id","goods","centerDialogVisible","content","score","currentId","currentOrder","total","methods","img","back","path","query","userId","submitComment","title","message","method","url","grade","comment","orderId","then","res","submitComment1","click_detail","alert","username","window","filters","numFilter"],"sourceRoot":"src/views","sources":["Order.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"center\">\n            <span @click=\"back\">\n            <div style=\"display: inline-block;\">\n                <img src=\"../assets/logo.png\" width=\"80\">\n            </div>\n            <div class=\"logo\" style=\"text-align:center;display: inline-block;\">\n                <div>烧瓶</div>\n                <div style=\"font-size: 16px;\">心仪生活上烧瓶</div>\n            </div>\n            </span>\n            <div class=\"logo\">\n                我的订单\n            </div>\n            <span style=\"font-weight:900;\">\n                合计支付：￥{{ total }}\n            </span>\n            \n        </div>\n\n        <div v-if=\"goods.length==0\" id=\"no\">\n                <el-empty image-size:50px description=\"这里什么都没有呢，快去逛逛叭~\"></el-empty>\n        </div>\n        <div id = \"main\" v-if=\"goods.length!=0\">\n            <div class=\"item\" v-for=\"good in goods\">\n            <div class=\"imageBox\" @click=\"click_detail(good)\"\n            :style=\"{'backgroundImage': 'url(' + require('../../../static/' + good.pic[0])  + ')'}\">\n            </div>\n            <div class=\"nameText\">\n                {{ good.good }}\n            </div>\n            <div class=\"priceBox\">\n                <div style=\"padding-top:50%\">\n                    <div>\n                      支付:￥{{ good.actual_paid }}\n                    </div>\n                    quanatity:{{ good.count }}\n                </div>\n\n            </div>\n            <div class=\"counter\">\n                <div>\n                    FORM:{{ good.FromPlace }}\n                </div>\n                <div>\n                    TO:{{ good.ToPlace }}\n                </div>\n                <el-button   type=\"primary\"  @click=\"submitComment1(good)\"\n                style=\"background-color: rgb(174, 0, 255);color: white;\">\n                    写评价\n                </el-button>\n                <div class=\"money\">\n                    \n                </div>\n                <div>\n                    {{ good.time }}\n                </div>\n                \n            </div>\n        </div>\n        </div>\n        <el-dialog\n            title=\"撰写评价\"\n            :visible.sync=\"centerDialogVisible\"\n            width=\"30%\"\n            center>\n            <el-rate v-model=\"score\"></el-rate>\n            <el-input v-model=\"content\" type=\"textarea\"\n            :autosize=\"{ minRows: 3, maxRows: 100}\">\n            </el-input>\n            <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"centerDialogVisible = false\">我再想想</el-button>\n            <el-button type=\"primary\" @click=\"submitComment\">提交评价</el-button>\n            </span>\n        </el-dialog>\n    \n    </div>\n    </template>\n    \n    <script>\n        import axios from 'axios';\n        import Mybutton from '@/components/Mybutton.vue';\n        export default {\n            name: \"Detail\",\n    async created() {\n        this.id = this.$route.query.id;\n        await axios.get(\"/api/getorder/\" + this.id + \"/all/\").then((res) => {\n            this.goods = res.data;\n        });\n        this.total = 0;\n        for (var i = 0;i < this.goods.length;i++) {\n            this.total = this.total + Number(this.goods[i].actual_paid);\n        }      \n    },\n    components() {\n        Mybutton;\n    },\n    data() {\n        return {\n            id: \"\",\n            goods: [],\n            centerDialogVisible: false,\n            content: '',\n            score: null,\n            currentId: null,\n            currentOrder:null,\n            total: 0\n        };\n    },\n    methods: {\n        img(good) {\n            return good.pic;\n        },\n        back() {\n            this.$router.push({ path: \"/main\", query: { userId: this.id } });\n        },\n        submitComment() {\n            this.centerDialogVisible = false;\n            if (this.content === \"\") {\n                this.$notify.error({\n                        title: '评论失败',\n                        message: '评论内容不能为空'\n                    });\n            } else {\n                this.$axios({\n                    method: 'post',\n                    url: '/api/addcomment/',\n                    data: JSON.stringify({\n                            grade: this.score,\n                            comment:this.content,\n                            orderId:this.currentOrder\n                            })\n                    })\n                .then(res => {\n                    \n                });\n                \n                this.$notify.success({\n                        title: '评论成功',\n                        message: '感谢您的评论~'\n                    });\n            }\n\n        },\n        submitComment1(good) {\n            this.centerDialogVisible = true;\n            this.currentId = good.goodId;\n            this.currentOrder = good.id;\n        },\n        click_detail(good) {\n            alert('1')\n            let routerDate = this.$router.resolve({\n                    path: '/detail',\n                    query: {\n                            id: good.goodId,\n                            username: this.id\n                            }\n                });\n                window.open(routerDate.href,'_blank');\n        }\n    },\n    filters: {\n        numFilter(value) {\n            let real = parseFloat(value).toFixed(2);\n            return real;\n        }\n    },\n    components: { Mybutton }\n}\n    </script>\n    \n    <style scope>\n    button {\n            color: white;\n            background-color: rgb(192, 48, 221);\n            font-size: 20px;\n        }\n    .item {\n        position: relative;\n        text-align: left;\n        width: 80%;\n        height: auto;\n        margin: auto;\n        border-style: solid;\n        border-color: rgba(149, 157, 159, 0.58);\n        background-color: aliceblue;\n        margin-top: 3%;\n    }\n    .imageBox::after {\n        content: \"\";\n        padding-bottom: 100%;\n        display: block;\n    }\n    .imageBox {\n      display: inline-block;\n      width:15%;\n      background: no-repeat; \n      -webkit-background-size: 100%;\n      -moz-background-size: 100%;\n      -o-background-size: 100%;\n      background-size: 100%;\n    }\n    .nameText {\n        display: inline-block;\n        vertical-align: top;\n        font-size: 18px;\n        font-weight: 700;\n        height: auto;\n        width: 40%;\n        overflow: hidden;\n    }\n    .priceBox {\n        margin-left: 3%;\n        padding-right: 3%;\n        display: inline-block;\n        font-size: 20px;\n        border-right: solid;\n        border-color: rgb(201, 200, 199) ;\n        border-width: 1px;\n        font-weight: 900;\n        position: absolute;\n        vertical-align: bottom;\n        height: 100%;\n    }\n    .counter {\n        text-align: right;\n        position: absolute;\n        display: inline-block;\n        right: 0;\n        margin-right: 3%;\n    }\n    .money {\n        margin-top: 20%;\n        font-size: 25px;\n        font-weight: 1000;\n    }\n\n            .logo {\n                display: inline-block;\n                color: rgb(174, 0, 255);\n                font-size: 30px;\n                font-weight: 600;\n                margin-right: 40px;\n            }\n            .center {\n                margin-top: 10px;\n                text-align: center;\n                margin-bottom: 10px;\n            }\n        #main{\n            height: auto;\n            width: 75%;\n            background-color: rgb(207, 202, 202);\n            position: absolute;\n            margin-left: 15%;\n            margin-top: 1%;\n            border-radius: 50px;\n            padding-bottom: 10%;\n            }\n        .block{\n            display: inline-block;\n        }\n        #cart{\n            background-color: white;\n            width: 70%;\n            height: 90px;\n            padding-top: 1%;\n            padding-left: 1%;\n            position: relative;\n        }\n        #des{\n            position: absolute; top:20px;\n            margin-right: 20px;\n            width: 200px;\n        }\n        #txt{\n            font-size: 13px;\n            text-align: left;\n            display: -webkit-box;\n            -webkit-box-orient: vertical;\n            -webkit-line-clamp: 2;\n            overflow: hidden;\n            text-overflow: ellipsis;\n        }\n        #price{\n            position: absolute; top:20px;left:350px;\n        }\n        #numberCount{\n            position: absolute; top:20px;left:450px;\n        }\n        #count{\n            position: absolute; top:20px;left:550px;\n        }\n        #place{\n            position: absolute; top:20px;left:650px;\n        }\n        #time{\n            position: absolute; top:20px;left:750px;\n        }\n        #no {\n            margin-left: -120px;\n        }\n    </style>"]},"metadata":{},"sourceType":"module"}